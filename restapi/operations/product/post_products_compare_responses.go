// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/isaacomy/ralali/models"
)

// PostProductsCompareOKCode is the HTTP code returned for type PostProductsCompareOK
const PostProductsCompareOKCode int = 200

/*PostProductsCompareOK get product list

swagger:response postProductsCompareOK
*/
type PostProductsCompareOK struct {

	/*
	  In: Body
	*/
	Payload *PostProductsCompareOKBody `json:"body,omitempty"`
}

// NewPostProductsCompareOK creates PostProductsCompareOK with default headers values
func NewPostProductsCompareOK() *PostProductsCompareOK {

	return &PostProductsCompareOK{}
}

// WithPayload adds the payload to the post products compare o k response
func (o *PostProductsCompareOK) WithPayload(payload *PostProductsCompareOKBody) *PostProductsCompareOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post products compare o k response
func (o *PostProductsCompareOK) SetPayload(payload *PostProductsCompareOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProductsCompareOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostProductsCompareBadRequestCode is the HTTP code returned for type PostProductsCompareBadRequest
const PostProductsCompareBadRequestCode int = 400

/*PostProductsCompareBadRequest Bad Request / Validation exception

swagger:response postProductsCompareBadRequest
*/
type PostProductsCompareBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostProductsCompareBadRequest creates PostProductsCompareBadRequest with default headers values
func NewPostProductsCompareBadRequest() *PostProductsCompareBadRequest {

	return &PostProductsCompareBadRequest{}
}

// WithPayload adds the payload to the post products compare bad request response
func (o *PostProductsCompareBadRequest) WithPayload(payload *models.ErrorMessage) *PostProductsCompareBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post products compare bad request response
func (o *PostProductsCompareBadRequest) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProductsCompareBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostProductsCompareNotFoundCode is the HTTP code returned for type PostProductsCompareNotFound
const PostProductsCompareNotFoundCode int = 404

/*PostProductsCompareNotFound Not found

swagger:response postProductsCompareNotFound
*/
type PostProductsCompareNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostProductsCompareNotFound creates PostProductsCompareNotFound with default headers values
func NewPostProductsCompareNotFound() *PostProductsCompareNotFound {

	return &PostProductsCompareNotFound{}
}

// WithPayload adds the payload to the post products compare not found response
func (o *PostProductsCompareNotFound) WithPayload(payload *models.ErrorMessage) *PostProductsCompareNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post products compare not found response
func (o *PostProductsCompareNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProductsCompareNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostProductsCompareDefault Error

swagger:response postProductsCompareDefault
*/
type PostProductsCompareDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostProductsCompareDefault creates PostProductsCompareDefault with default headers values
func NewPostProductsCompareDefault(code int) *PostProductsCompareDefault {
	if code <= 0 {
		code = 500
	}

	return &PostProductsCompareDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post products compare default response
func (o *PostProductsCompareDefault) WithStatusCode(code int) *PostProductsCompareDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post products compare default response
func (o *PostProductsCompareDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post products compare default response
func (o *PostProductsCompareDefault) WithPayload(payload *models.ErrorMessage) *PostProductsCompareDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post products compare default response
func (o *PostProductsCompareDefault) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProductsCompareDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
