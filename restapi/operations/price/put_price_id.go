// Code generated by go-swagger; DO NOT EDIT.

package price

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// PutPriceIDHandlerFunc turns a function with the right signature into a put price ID handler
type PutPriceIDHandlerFunc func(PutPriceIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutPriceIDHandlerFunc) Handle(params PutPriceIDParams) middleware.Responder {
	return fn(params)
}

// PutPriceIDHandler interface for that can handle valid put price ID params
type PutPriceIDHandler interface {
	Handle(PutPriceIDParams) middleware.Responder
}

// NewPutPriceID creates a new http.Handler for the put price ID operation
func NewPutPriceID(ctx *middleware.Context, handler PutPriceIDHandler) *PutPriceID {
	return &PutPriceID{Context: ctx, Handler: handler}
}

/*PutPriceID swagger:route PUT /price/{id} price putPriceId

Update Price by ID

Update Price by ID

*/
type PutPriceID struct {
	Context *middleware.Context
	Handler PutPriceIDHandler
}

func (o *PutPriceID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPutPriceIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PutPriceIDBody put price ID body
// swagger:model PutPriceIDBody
type PutPriceIDBody struct {

	// min quantity
	MinQuantity int64 `json:"min_quantity,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`
}

// Validate validates this put price ID body
func (o *PutPriceIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutPriceIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutPriceIDBody) UnmarshalBinary(b []byte) error {
	var res PutPriceIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PutPriceIDOKBody put price ID o k body
// swagger:model PutPriceIDOKBody
type PutPriceIDOKBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this put price ID o k body
func (o *PutPriceIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutPriceIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutPriceIDOKBody) UnmarshalBinary(b []byte) error {
	var res PutPriceIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
