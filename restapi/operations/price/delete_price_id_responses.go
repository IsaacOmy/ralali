// Code generated by go-swagger; DO NOT EDIT.

package price

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/isaacomy/ralali/models"
)

// DeletePriceIDOKCode is the HTTP code returned for type DeletePriceIDOK
const DeletePriceIDOKCode int = 200

/*DeletePriceIDOK Sends Price data

swagger:response deletePriceIdOK
*/
type DeletePriceIDOK struct {

	/*
	  In: Body
	*/
	Payload *DeletePriceIDOKBody `json:"body,omitempty"`
}

// NewDeletePriceIDOK creates DeletePriceIDOK with default headers values
func NewDeletePriceIDOK() *DeletePriceIDOK {

	return &DeletePriceIDOK{}
}

// WithPayload adds the payload to the delete price Id o k response
func (o *DeletePriceIDOK) WithPayload(payload *DeletePriceIDOKBody) *DeletePriceIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete price Id o k response
func (o *DeletePriceIDOK) SetPayload(payload *DeletePriceIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePriceIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePriceIDBadRequestCode is the HTTP code returned for type DeletePriceIDBadRequest
const DeletePriceIDBadRequestCode int = 400

/*DeletePriceIDBadRequest Bad Request / Validation exception

swagger:response deletePriceIdBadRequest
*/
type DeletePriceIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeletePriceIDBadRequest creates DeletePriceIDBadRequest with default headers values
func NewDeletePriceIDBadRequest() *DeletePriceIDBadRequest {

	return &DeletePriceIDBadRequest{}
}

// WithPayload adds the payload to the delete price Id bad request response
func (o *DeletePriceIDBadRequest) WithPayload(payload *models.ErrorMessage) *DeletePriceIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete price Id bad request response
func (o *DeletePriceIDBadRequest) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePriceIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePriceIDNotFoundCode is the HTTP code returned for type DeletePriceIDNotFound
const DeletePriceIDNotFoundCode int = 404

/*DeletePriceIDNotFound Not found

swagger:response deletePriceIdNotFound
*/
type DeletePriceIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeletePriceIDNotFound creates DeletePriceIDNotFound with default headers values
func NewDeletePriceIDNotFound() *DeletePriceIDNotFound {

	return &DeletePriceIDNotFound{}
}

// WithPayload adds the payload to the delete price Id not found response
func (o *DeletePriceIDNotFound) WithPayload(payload *models.ErrorMessage) *DeletePriceIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete price Id not found response
func (o *DeletePriceIDNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePriceIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePriceIDUnprocessableEntityCode is the HTTP code returned for type DeletePriceIDUnprocessableEntity
const DeletePriceIDUnprocessableEntityCode int = 422

/*DeletePriceIDUnprocessableEntity Unprocessable Entity

swagger:response deletePriceIdUnprocessableEntity
*/
type DeletePriceIDUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeletePriceIDUnprocessableEntity creates DeletePriceIDUnprocessableEntity with default headers values
func NewDeletePriceIDUnprocessableEntity() *DeletePriceIDUnprocessableEntity {

	return &DeletePriceIDUnprocessableEntity{}
}

// WithPayload adds the payload to the delete price Id unprocessable entity response
func (o *DeletePriceIDUnprocessableEntity) WithPayload(payload *models.ErrorMessage) *DeletePriceIDUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete price Id unprocessable entity response
func (o *DeletePriceIDUnprocessableEntity) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePriceIDUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeletePriceIDDefault Error

swagger:response deletePriceIdDefault
*/
type DeletePriceIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeletePriceIDDefault creates DeletePriceIDDefault with default headers values
func NewDeletePriceIDDefault(code int) *DeletePriceIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeletePriceIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete price ID default response
func (o *DeletePriceIDDefault) WithStatusCode(code int) *DeletePriceIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete price ID default response
func (o *DeletePriceIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete price ID default response
func (o *DeletePriceIDDefault) WithPayload(payload *models.ErrorMessage) *DeletePriceIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete price ID default response
func (o *DeletePriceIDDefault) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePriceIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
