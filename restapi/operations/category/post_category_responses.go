// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/isaacomy/ralali/models"
)

// PostCategoryOKCode is the HTTP code returned for type PostCategoryOK
const PostCategoryOKCode int = 200

/*PostCategoryOK Insert New Product

swagger:response postCategoryOK
*/
type PostCategoryOK struct {

	/*
	  In: Body
	*/
	Payload *PostCategoryOKBody `json:"body,omitempty"`
}

// NewPostCategoryOK creates PostCategoryOK with default headers values
func NewPostCategoryOK() *PostCategoryOK {

	return &PostCategoryOK{}
}

// WithPayload adds the payload to the post category o k response
func (o *PostCategoryOK) WithPayload(payload *PostCategoryOKBody) *PostCategoryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post category o k response
func (o *PostCategoryOK) SetPayload(payload *PostCategoryOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCategoryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCategoryBadRequestCode is the HTTP code returned for type PostCategoryBadRequest
const PostCategoryBadRequestCode int = 400

/*PostCategoryBadRequest Bad Request / Validation exception

swagger:response postCategoryBadRequest
*/
type PostCategoryBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostCategoryBadRequest creates PostCategoryBadRequest with default headers values
func NewPostCategoryBadRequest() *PostCategoryBadRequest {

	return &PostCategoryBadRequest{}
}

// WithPayload adds the payload to the post category bad request response
func (o *PostCategoryBadRequest) WithPayload(payload *models.ErrorMessage) *PostCategoryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post category bad request response
func (o *PostCategoryBadRequest) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCategoryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostCategoryDefault Error

swagger:response postCategoryDefault
*/
type PostCategoryDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostCategoryDefault creates PostCategoryDefault with default headers values
func NewPostCategoryDefault(code int) *PostCategoryDefault {
	if code <= 0 {
		code = 500
	}

	return &PostCategoryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post category default response
func (o *PostCategoryDefault) WithStatusCode(code int) *PostCategoryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post category default response
func (o *PostCategoryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post category default response
func (o *PostCategoryDefault) WithPayload(payload *models.ErrorMessage) *PostCategoryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post category default response
func (o *PostCategoryDefault) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCategoryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
