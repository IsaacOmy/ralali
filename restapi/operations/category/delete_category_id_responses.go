// Code generated by go-swagger; DO NOT EDIT.

package category

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/isaacomy/ralali/models"
)

// DeleteCategoryIDOKCode is the HTTP code returned for type DeleteCategoryIDOK
const DeleteCategoryIDOKCode int = 200

/*DeleteCategoryIDOK Sends Category data

swagger:response deleteCategoryIdOK
*/
type DeleteCategoryIDOK struct {

	/*
	  In: Body
	*/
	Payload *DeleteCategoryIDOKBody `json:"body,omitempty"`
}

// NewDeleteCategoryIDOK creates DeleteCategoryIDOK with default headers values
func NewDeleteCategoryIDOK() *DeleteCategoryIDOK {

	return &DeleteCategoryIDOK{}
}

// WithPayload adds the payload to the delete category Id o k response
func (o *DeleteCategoryIDOK) WithPayload(payload *DeleteCategoryIDOKBody) *DeleteCategoryIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete category Id o k response
func (o *DeleteCategoryIDOK) SetPayload(payload *DeleteCategoryIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCategoryIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCategoryIDBadRequestCode is the HTTP code returned for type DeleteCategoryIDBadRequest
const DeleteCategoryIDBadRequestCode int = 400

/*DeleteCategoryIDBadRequest Bad Request / Validation exception

swagger:response deleteCategoryIdBadRequest
*/
type DeleteCategoryIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteCategoryIDBadRequest creates DeleteCategoryIDBadRequest with default headers values
func NewDeleteCategoryIDBadRequest() *DeleteCategoryIDBadRequest {

	return &DeleteCategoryIDBadRequest{}
}

// WithPayload adds the payload to the delete category Id bad request response
func (o *DeleteCategoryIDBadRequest) WithPayload(payload *models.ErrorMessage) *DeleteCategoryIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete category Id bad request response
func (o *DeleteCategoryIDBadRequest) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCategoryIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCategoryIDNotFoundCode is the HTTP code returned for type DeleteCategoryIDNotFound
const DeleteCategoryIDNotFoundCode int = 404

/*DeleteCategoryIDNotFound Not found

swagger:response deleteCategoryIdNotFound
*/
type DeleteCategoryIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteCategoryIDNotFound creates DeleteCategoryIDNotFound with default headers values
func NewDeleteCategoryIDNotFound() *DeleteCategoryIDNotFound {

	return &DeleteCategoryIDNotFound{}
}

// WithPayload adds the payload to the delete category Id not found response
func (o *DeleteCategoryIDNotFound) WithPayload(payload *models.ErrorMessage) *DeleteCategoryIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete category Id not found response
func (o *DeleteCategoryIDNotFound) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCategoryIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCategoryIDUnprocessableEntityCode is the HTTP code returned for type DeleteCategoryIDUnprocessableEntity
const DeleteCategoryIDUnprocessableEntityCode int = 422

/*DeleteCategoryIDUnprocessableEntity Unprocessable Entity

swagger:response deleteCategoryIdUnprocessableEntity
*/
type DeleteCategoryIDUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteCategoryIDUnprocessableEntity creates DeleteCategoryIDUnprocessableEntity with default headers values
func NewDeleteCategoryIDUnprocessableEntity() *DeleteCategoryIDUnprocessableEntity {

	return &DeleteCategoryIDUnprocessableEntity{}
}

// WithPayload adds the payload to the delete category Id unprocessable entity response
func (o *DeleteCategoryIDUnprocessableEntity) WithPayload(payload *models.ErrorMessage) *DeleteCategoryIDUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete category Id unprocessable entity response
func (o *DeleteCategoryIDUnprocessableEntity) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCategoryIDUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteCategoryIDDefault Error

swagger:response deleteCategoryIdDefault
*/
type DeleteCategoryIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewDeleteCategoryIDDefault creates DeleteCategoryIDDefault with default headers values
func NewDeleteCategoryIDDefault(code int) *DeleteCategoryIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteCategoryIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete category ID default response
func (o *DeleteCategoryIDDefault) WithStatusCode(code int) *DeleteCategoryIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete category ID default response
func (o *DeleteCategoryIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete category ID default response
func (o *DeleteCategoryIDDefault) WithPayload(payload *models.ErrorMessage) *DeleteCategoryIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete category ID default response
func (o *DeleteCategoryIDDefault) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCategoryIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
