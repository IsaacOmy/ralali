// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/isaacomy/ralali/models"
)

// PostOrderOKCode is the HTTP code returned for type PostOrderOK
const PostOrderOKCode int = 200

/*PostOrderOK Insert New Order

swagger:response postOrderOK
*/
type PostOrderOK struct {

	/*
	  In: Body
	*/
	Payload *PostOrderOKBody `json:"body,omitempty"`
}

// NewPostOrderOK creates PostOrderOK with default headers values
func NewPostOrderOK() *PostOrderOK {

	return &PostOrderOK{}
}

// WithPayload adds the payload to the post order o k response
func (o *PostOrderOK) WithPayload(payload *PostOrderOKBody) *PostOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post order o k response
func (o *PostOrderOK) SetPayload(payload *PostOrderOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOrderBadRequestCode is the HTTP code returned for type PostOrderBadRequest
const PostOrderBadRequestCode int = 400

/*PostOrderBadRequest Bad Request / Validation exception

swagger:response postOrderBadRequest
*/
type PostOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostOrderBadRequest creates PostOrderBadRequest with default headers values
func NewPostOrderBadRequest() *PostOrderBadRequest {

	return &PostOrderBadRequest{}
}

// WithPayload adds the payload to the post order bad request response
func (o *PostOrderBadRequest) WithPayload(payload *models.ErrorMessage) *PostOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post order bad request response
func (o *PostOrderBadRequest) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostOrderDefault Error

swagger:response postOrderDefault
*/
type PostOrderDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorMessage `json:"body,omitempty"`
}

// NewPostOrderDefault creates PostOrderDefault with default headers values
func NewPostOrderDefault(code int) *PostOrderDefault {
	if code <= 0 {
		code = 500
	}

	return &PostOrderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post order default response
func (o *PostOrderDefault) WithStatusCode(code int) *PostOrderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post order default response
func (o *PostOrderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post order default response
func (o *PostOrderDefault) WithPayload(payload *models.ErrorMessage) *PostOrderDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post order default response
func (o *PostOrderDefault) SetPayload(payload *models.ErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOrderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
