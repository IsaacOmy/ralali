// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Products Service provides API for Products management",
    "title": "Products Service",
    "version": "1.0.0"
  },
  "paths": {
    "/category": {
      "post": {
        "description": "Add New Category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Create New Category",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category_parent_id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Product",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/category/list": {
      "get": {
        "description": "Get Category List",
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Get Category List",
        "parameters": [
          {
            "type": "integer",
            "description": "start record for limitation",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "row length for limitation",
            "name": "per_page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "category name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "get category list",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Category"
                  }
                },
                "total_items": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "description": "Get Category Detail",
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Get Category Detail",
        "parameters": [
          {
            "type": "integer",
            "description": "category id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Category data",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "put": {
        "description": "Update Category by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Update Category by ID",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category_parent_id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates Category data",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "description": "delete Category Data by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Delete Category by ID",
        "parameters": [
          {
            "type": "integer",
            "description": "Category id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Category data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/order": {
      "post": {
        "description": "Add New Order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "order"
        ],
        "summary": "Create New Order",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Order",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "order_id": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "description": "Get Order Detail",
        "produces": [
          "application/json"
        ],
        "tags": [
          "order"
        ],
        "summary": "Get Order Detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Order id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Order data",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/price": {
      "post": {
        "description": "Add New Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "price"
        ],
        "summary": "Create New Price",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "min_quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number",
                  "format": "double"
                },
                "product_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Price",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/price/{id}": {
      "put": {
        "description": "Update Price by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "price"
        ],
        "summary": "Update Price by ID",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "min_quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates Price data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "description": "delete Price Data by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "price"
        ],
        "summary": "Delete Price by ID",
        "parameters": [
          {
            "type": "integer",
            "description": "Price id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Price data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "description": "Add New Product",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Create New Product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categories": {
                  "description": "categories id",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "name": {
                  "type": "string"
                },
                "prices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "min_quantity": {
                        "type": "integer"
                      },
                      "price": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  }
                },
                "series": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Product",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products/compare": {
      "post": {
        "description": "Get Compare Product List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Get Compare Product List",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "products_id": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get product list",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "total_items": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products/list": {
      "get": {
        "description": "Get Product List",
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Get Product List",
        "parameters": [
          {
            "type": "integer",
            "description": "start record for limitation",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "row length for limitation",
            "name": "per_page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "product name",
            "name": "keyword",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "get product list",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "total_items": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Get Product Detail",
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Get Product Detail",
        "parameters": [
          {
            "type": "integer",
            "description": "product id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Product data",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "put": {
        "description": "Update Product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Update Product by ID",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "catogories": {
                  "description": "categories id",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "name": {
                  "type": "string"
                },
                "series": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates Product data",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "description": "delete Product Data by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Delete Product by ID",
        "parameters": [
          {
            "type": "integer",
            "description": "product id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Product data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "category_parent": {
          "$ref": "#/definitions/Category"
        },
        "category_parent_id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"ForeignKey:CategoryID\""
        },
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ItemOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "order_id": {
          "type": "integer"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "product_id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "created_date": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "item_orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemOrder"
          }
        }
      }
    },
    "Price": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "min_quantity": {
          "type": "integer"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "product_id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          },
          "x-go-custom-tag": "gorm:\"many2many:product_has_category;\""
        },
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "name": {
          "type": "string"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "series": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "ProductHasCategory": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer"
        },
        "product_id": {
          "type": "integer"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Products Service Docs",
    "url": "http://localhost:8080"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Products Service provides API for Products management",
    "title": "Products Service",
    "version": "1.0.0"
  },
  "paths": {
    "/category": {
      "post": {
        "description": "Add New Category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Create New Category",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category_parent_id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Product",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/category/list": {
      "get": {
        "description": "Get Category List",
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Get Category List",
        "parameters": [
          {
            "type": "integer",
            "description": "start record for limitation",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "row length for limitation",
            "name": "per_page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "category name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "get category list",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Category"
                  }
                },
                "total_items": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "description": "Get Category Detail",
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Get Category Detail",
        "parameters": [
          {
            "type": "integer",
            "description": "category id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Category data",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "put": {
        "description": "Update Category by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Update Category by ID",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category_parent_id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates Category data",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "description": "delete Category Data by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "summary": "Delete Category by ID",
        "parameters": [
          {
            "type": "integer",
            "description": "Category id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Category data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/order": {
      "post": {
        "description": "Add New Order",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "order"
        ],
        "summary": "Create New Order",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostOrderParamsBodyItems0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Order",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "order_id": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "description": "Get Order Detail",
        "produces": [
          "application/json"
        ],
        "tags": [
          "order"
        ],
        "summary": "Get Order Detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Order id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Order data",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/price": {
      "post": {
        "description": "Add New Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "price"
        ],
        "summary": "Create New Price",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "min_quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number",
                  "format": "double"
                },
                "product_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Price",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/price/{id}": {
      "put": {
        "description": "Update Price by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "price"
        ],
        "summary": "Update Price by ID",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "min_quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates Price data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "description": "delete Price Data by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "price"
        ],
        "summary": "Delete Price by ID",
        "parameters": [
          {
            "type": "integer",
            "description": "Price id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Price data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "description": "Add New Product",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Create New Product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categories": {
                  "description": "categories id",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "name": {
                  "type": "string"
                },
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PricesItems0"
                  }
                },
                "series": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert New Product",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products/compare": {
      "post": {
        "description": "Get Compare Product List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Get Compare Product List",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "products_id": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get product list",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "total_items": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products/list": {
      "get": {
        "description": "Get Product List",
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Get Product List",
        "parameters": [
          {
            "type": "integer",
            "description": "start record for limitation",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "row length for limitation",
            "name": "per_page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "product name",
            "name": "keyword",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "get product list",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "total_items": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Get Product Detail",
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Get Product Detail",
        "parameters": [
          {
            "type": "integer",
            "description": "product id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Product data",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "put": {
        "description": "Update Product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Update Product by ID",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "catogories": {
                  "description": "categories id",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "name": {
                  "type": "string"
                },
                "series": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates Product data",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "description": "delete Product Data by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "product"
        ],
        "summary": "Delete Product by ID",
        "parameters": [
          {
            "type": "integer",
            "description": "product id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Product data",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Validation exception",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "category_parent": {
          "$ref": "#/definitions/Category"
        },
        "category_parent_id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"ForeignKey:CategoryID\""
        },
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ItemOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "order_id": {
          "type": "integer"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "product_id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "created_date": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "item_orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemOrder"
          }
        }
      }
    },
    "PostOrderParamsBodyItems0": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "Price": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "min_quantity": {
          "type": "integer"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "product_id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "PricesItems0": {
      "type": "object",
      "properties": {
        "min_quantity": {
          "type": "integer"
        },
        "price": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          },
          "x-go-custom-tag": "gorm:\"many2many:product_has_category;\""
        },
        "id": {
          "type": "integer",
          "x-go-custom-tag": "gorm:\"primary_key\""
        },
        "name": {
          "type": "string"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "series": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "ProductHasCategory": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer"
        },
        "product_id": {
          "type": "integer"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Products Service Docs",
    "url": "http://localhost:8080"
  }
}`))
}
